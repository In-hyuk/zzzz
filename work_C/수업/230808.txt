230808
~9.6 C언어

비주얼스튜디오 2022 설치
->C++를 사용한 데스크톱 개발

윤성우 열혈C프로그래밍.pdf 다운

알고리즘 연습<<<<<중요

main함수 1프로젝트 당 1개
------------

새 프로젝트 만들기 > 빈 프로젝트
소스파일 > 새 항목 추가

cpp = c++ (c도포함)
hello.cpp 로 되어있지만 hello.c 로 저장
글꼴 콘솔라스 크기 16~20

print 말고 printf로 f는 format 형태에 자동으로 맞추어 출력
------------
편집 > 고급 > 문서서식 
=자동으로 들여쓰기 해줌(줄맞춤)

// <- 주석문(1줄)
/* ~ */ <- 여러줄(블럭)
\n <-출력되는 내용을 줄바꿈 (new line)

main 함수 한 프로젝트에 여러개 있으면 오류
->속성에서 빌드에서 제외 클릭
------------
%d: 숫자 정수로 바뀜 (10진수)
      2개 이상이면 순서대로 알아서 찾아 들어감
--------------
정수: %d, 실수: %f, 문자: %c 문자열: %s(string)
                   ->.2f -> 소수점 2자리까지만 표시
주의 : 문자(''), 문자열("")

c언어에서의 010 출력
그냥 printf("%d",010); 이라고 하면 8이라고 뜸 > 숫자 앞에 0을 붙이면 8진수로 취급되기 때문
그래서 printf("%03d\n",10); 이라고 해야함
%3d : 앞에 자리를 확보한다. 3d이면 __d의값 이렇게 들어감
%03d : 빈칸을 0으로 채운다. 00d값 이렇게 들어감.
--------------------
변수 중요
변수 만들 때 데이터타입 종류
정수: int, 실수: float, 문자: char
-------------------
실습

https://blog.naver.com/hack4ork
---------------------------------------------------------------------------------
230809
코드 작성할때
ctrl + 스페이스 = 변수 자동완성

1bit : 컴퓨터의 최소단위
8bit = 1Byte(바이트) 10비트 아님.
1000byte = 1KB
1000KB = 1MB
------------------
int출력 : %d  -> 정수
float출력 : %f  -> 실수
char출력 : %c  -> 문자
입력, 출력 동일

연산자 우선순위 (괄호) -> ×,÷ -> +,-
------------------
double 출력 : %lf -> 실수
float 출력 : %f     -> 실수

변수 연습
---------------------
++가 변수 뒤에 있으면 지금 바로 증가X
num1++ (후위 증가)
++num1 (전위 증가)

-----------------------
많이 쓰는거(좀 중요한거)
1 .%(나머지 연산자)
2. 관계 연산자                 ->저 3가지 제어문 에서 많이씀
3. 논리 연산자

C언어는 0이 아닌 모든 값을 참으로 간주한다. 다만 1이 참을 의미하는 대표적인 값일 뿐이다.
관계연산자 1은 참 0은 거짓

&&: and \\: or !: not

scanf 함수
scanf("%d",&num);
변수 앞의 &는 주소를 의미

최신 비주얼스튜디오에서는 scanf를 사용불가.
scanf_s 라는 함수로 대체되었음. s는 secure 보안뜻
하지만 C언어 표준함수는 scanf 가 맞음.
scanf 쓸려면
맨 윗 줄에 #define _CRT_SECURE_NO_WARNINGS 넣기
scanf에는 \n 절대 사용금지
-------------------------
일반변수 -> 재사용 가능
상수변수 : const가 변수 앞에 붙음. (재사용 불가) 
ex) PI = 3.14 -> 안 변하는값 (상수변수로 설정하면 좋음.)
상수변수는 대문자로 쓰기
-------------------------
실습

---------------------------------------------------------------------------------
230810

동전 교환기 프로그램 만들기 
디버깅 - 1. 오류를 해결
           2. 변수를 추적
--------------------------
동전 교환기 프로그램 만들기 계속
--------------------------
while 반복문
loop문 이라고도 한다.

조건이 참일때까지 반복(거짓이면 탈출)
숫자 1은 '참'의미 while(1) -> 무한반복
----------------------------
이중반복문
코드는 간결하게 반복문 많으면 안좋음.

do~while문 최소한 한번은 실행하는 구조
-----------------------------
for문 
증가하는건 while 쓰는게 더 나음

반복의 횟수가 딱 정해진 경우라면 for문 최선
그게 아니라면 while문이 더 자연스러울수있다.
------------------------------
실습
시작값과 마지막값을 입력받아 합 구하는 프로그램.
 예) 1번째 입력: 2, 2번째 입력: 5 
     2+3+4+5 = 14
 조건) 만약에 2번째 수가 1번째 수보다 작거나 같으면 다시 입력.(do while)
--------------------------------
실습계속
\t -> tap만큼 간격

---------------------------------------------------------------------------------
230811
어제한거 복습 [while, do~while, for]
반복문 : 특정한 문장을 반복적으로 실행
do~while : 먼저 한번은 실행하고 난 후 조건 체크

디버깅(debugging): 오류를 해결하는 과정
맨 왼쪽에 빨간점 누르고 디버깅 편하게 하기 -> 색칠 된 초록색 실행버튼 누르기
------------------------
어제 실습한거 풀이
-------------------------
행, 열 개념은 반드시 2중반복문에서 적용
구구단 실습
-------------------------
구구단
--------------------------
조건문
num이 0이면 조건실행 -> num == 0
if문에서 else 선택
else 생략가능.
else if 여러번 가능 if는 무조건 1번만.
else를 사용하는 경우에는 조건 X
-----------------------------
성적 구하기 실습
------------------------------
실습





































