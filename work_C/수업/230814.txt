230814
금요일날 했던 조건문 실습
-----------------
break문 중요
자신이 속한 반복문만 탈출

continue
조건검사로 이동

switch문 <- 범위를 나타낼 수 없음 (90점에서 100점사이 이런거)
반복문 내에서 switch를 사용하는 경우 break 사용에 주의
-------------------
switch - case - break 세트
break 안쓰면 그냥 case 문에서 밑으로 쭈루룩 차례대로 실행

goto문 잘 안씀(특수한 경우에만 사용) -> 프로그램의 자연스러운 흐름을 방해하기 때문.
--------------------
숫자 입력받고 밑에 문자 입력받으려면 엔터키 값이 자동으로 문자에 저장됨.
그래서 앞에 공백 한칸 두고 문자열 받기.
---------------------
실습
---------------------
백준,프로그래머스 알고리즘 문제 풀기
----------------------
system("cls"); // cls: 화면을 청소하는 명령어
system("pause"); //동작을 일시 정지
시스템 명령 오류 뜨면 
#include <stdlib.h> 추가

switch문에서 무한루프 일 때 break문 안먹히니까
exit(0); // 강제로 앱을 종료
------------------------------------------------------------------------------
230816
월요일꺼 실습
값을 소스코드에 직접 표기하는 방식 - 하드코딩 -> 비효율적
가급적 변수이용

<이때까지 한거 중요한것만 정리>
변수 : 정보(데이터)를 저장하는 공간
정보 : 숫자(정수int, 실수float), 문자(문자, 문자열)
정수: int(%d), 실수: float(%f), 문자: char(%c)
연산자 : %(나머지), 비교(관계)연산자, 논리연산자
출력 : printf 함수, 입력 : scanf 함수
반복문(for, while, do-while)
제어문(if, switch)
---------------------------
반복문 실습
---------------------------
배열 [] 
C언어에서는 문자열 배열 끝에 Null값(\0)이 들어옴 
유니코드 : 한글, 중국어, 일본어 ....
아스키 코드 : 알파벳
문자열 배열에 한글도 가능
---------------------------
일반변수 scanf 사용시 & 사용하는데
배열에서는 &연산자 붙이지 않는다.
----------------------------
1차원 배열 실습
-----------------------------
배열 실습
----------------------------
배열 실습
------------------------------------------------------------------------------
230817
배열: 연속된 변수들의 집합(저장 공간)
문자열 배열의 이름에 배열 시작의 주소의 의미가 있음
scanf로 받을때 &연산자 안씀
------------------------------
어제 실습 풀이
다차원 배열
2차원이 중요 [행][열]
-------------------------------
2차원 배열 한줄로도 초기화가능하나 사용하지말기
가독성 떨어짐
--------------------------------
3차원배열 [][][]

비주얼스튜디오 솔루션 탐색기 단축기 ctrl + alt + l
--------------------------------
2차원배열,반복문 실습
--------------------------------
2차원배열,반복문 실습
--------------------------------
2차원배열,반복문 실습
------------------------------------------------------------------------------
230818
어제 실습 풀이
이때 까지 배운거
변수, 연산자(관계, 논리), 제어문, 반복문, 배열
이제 -> 함수(중요)
1. 기본문법 2. 알고리즘(로직) => 배열 
3. 모듈화(함수)
---------------------------------
함수
코딩 스타일(변수나 함수이름 지을때)
스네이크 방식: show_number -> C언어 스타일
카멜방식: showNumber -> 자바 (객체지향)
파스칼방식: ShowNumber -> C++, C# (객체지향)
----------------------------------
함수 종류
1. 매개변수 (X), 반환값 (X) -> 잘안씀
2. 매개변수 (X), 반환값 (O)
3. 매개변수 (O), 반환값 (X)
4. 매개변수 (O), 반환값 (O)
보통 반환값(return) 쓰는건 함수 이름앞에 선언할때 int나 char 데이터 타입에 맞게
return 없는건 보통 void 쓰는듯
-----------------------------------
함수
-----------------------------------
전달인자 -> 매개변수
반환값 -> return
반환값 없으면 void
-----------------------------------
함수 만들때 주의
1호출하는거
2매개변수 어떻게 값을 전달
3return 주의

void일때 return 쓰면 그 함수를 탈출하는 용도로 쓸 수 있음.

함수의 선언 = 프로토타입선언
------------------------------------
실습

블로그에서
정렬 sort 알고리즘 2번째, 기본알고리즘 6번째(배열) 풀어보기
로또(중복방지)
-------------------------------------




















